name: Deploy Staging Environment

on:   
  workflow_dispatch:

jobs:
  build:

    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 6.0.x
        
    - name: Restore dependencies
      run: dotnet restore
      
    - name: Build with dotnet
      run: dotnet build -c Release
      
    - name: dotnet publish
      run: dotnet publish -c Release -o ${{env.DOTNET_ROOT}}/testapi
      
    - name: Install EF Tool
      run: |
          dotnet new tool-manifest
          dotnet tool install dotnet-ef
      
    # Generate migration script
    - name: Build dotnet bundle
      run: |
          cd ./code-first-db-ci-cd
          dotnet ef migrations script -o ${{ github.workspace }}\scripts\migration-script.sql --idempotent
          
    # Publish migrations bundle as artifact
    - uses: actions/upload-artifact@v2
      with:
        name: MigrationScript
        path: ${{ github.workspace }}\scripts\migration-script.sql
        if-no-files-found: error
        retention-days: 30
        
    - name: Upload artifact for deployment job
      uses: actions/upload-artifact@v2
      with:
        name: TestApi
        path: ${{env.DOTNET_ROOT}}/testapi
      
  remove-previous-staging-db: 
    runs-on: ubuntu-latest
    needs: build
    
    steps:
    - uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
        
    - name: Azure CLI database copy script
      uses: azure/CLI@v1
      with:
        azcliversion: 2.30.0
        inlineScript: |
          resourceGroup="deleteme-sql-db-test"
          server="mitch-sql-test"
          database="mitch-sql-test-staging"
          
          az sql db delete -n $database -g $resourceGroup -s $server
    
  create-staging-db:
  
    runs-on: ubuntu-latest
    needs: remove-previous-staging-db
    
    steps:
    
    - uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
        
    - name: Azure CLI database copy script
      uses: azure/CLI@v1
      with:
        azcliversion: 2.30.0
        inlineScript: |
          location="Central US"
          resourceGroup="deleteme-sql-db-test"
          server="mitch-sql-test"
          database="mitch-sql-test"
          newDatabase="mitch-sql-test-staging"
          
          az sql db copy -g $resourceGroup -s $server -n $database --dest-name $newDatabase --service-objective Basic
  
  deploy-to-staging-slot:
  
    runs-on: windows-latest
    needs: create-staging-db
    
    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v2
        with:
          name: TestApi
          
          
      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'mitch-ci-cd'
          slot-name: 'Production'
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          package: .
